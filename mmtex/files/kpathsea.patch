--- a/kpathsea/cnf.c
+++ b/kpathsea/cnf.c
@@ -289,14 +289,27 @@
       free (*cnf);
     }
     free (cnf_files);
-  } else {
-    string warn = getenv ("KPATHSEA_WARNING");
-    if (!(warn && STREQ (warn, "0"))) {
-      WARNING1
-  ("kpathsea: configuration file texmf.cnf not found in these directories: %s",
-        cnf_path);
-    }
   }
+
+#define SET_VAR(var, value) \
+  do { \
+    char *tmp1 = xmalloc(sizeof(var)   / sizeof(var[0])   + 1); strcpy(tmp1, var);   \
+    char *tmp2 = xmalloc(sizeof(value) / sizeof(value[0]) + 1); strcpy(tmp2, value); \
+    hash_insert(&(kpse->cnf_hash), tmp1, tmp2); \
+  } while (0)
+
+  SET_VAR("_TEXMFMMTEX", "!!$SELFAUTODIR/share/mmtex-$progname:!!$SELFAUTODIR/share/mmtex");
+
+  SET_VAR("XDG_CONFIG_HOME", "~/.config");
+  SET_VAR("XDG_CACHE_HOME", "~/.cache");
+  SET_VAR("XDG_DATA_HOME", "~/.local/share");
+  SET_VAR("TEXMFVAR", "$XDG_CACHE_HOME/mmtex");
+  SET_VAR("TEXMFDBS", "$_TEXMFMMTEX");
+
+  SET_VAR("TEXMFDOTDIR", ".");
+  SET_VAR("TEXMFUSER", "$XDG_DATA_HOME/{mmtex,texmf}");
+  SET_VAR("TEXMFSYSTEM", "/usr/local/share/{mmtex,texmf}:/usr/share/{mmtex,texmf}");
+  SET_VAR("TEXMF", "{$TEXMFUSER,$TEXMFSYSTEM}");
 }
 
 /* Read the cnf files on the first call.  Return the first value in the
@@ -308,11 +321,19 @@
   string ctry;
   const_string ret, *ret_list;
 
-  /* When we expand the compile-time value for DEFAULT_TEXMFCNF,
-     we end up needing the value for assorted variables,
-     so kpse_var_expand ends up calling us again.  Just return.  */
-  if (kpse->doing_cnf_init)
+  /* These variables have default values even for TEXMFCNF. */
+  if (kpse->doing_cnf_init) {
+#define INITIAL_VAR(var, value) \
+    if (strcmp(name, var) == 0) { \
+      char *tmp = xmalloc(sizeof(value) / sizeof(value[0]) + 1); \
+      return strcpy(tmp, value); \
+    }
+
+    INITIAL_VAR("TEXMFDOTDIR", ".")
+    INITIAL_VAR("XDG_CONFIG_HOME", "~/.config")
+
     return NULL;
+  }
 
   /* If no cnf hash yet, initialize.  */
   if (kpse->cnf_hash.size == 0) {
